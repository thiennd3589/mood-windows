{"version":3,"sources":["firebase/firebase.utils.js","redux/song/song.selector.js","component/sound-wave/sound-wave.component.jsx","redux/search/search.selector.js","component/video-container/video-container.component.jsx","redux/search/search.action.types.js","redux/search/search.actions.js","redux/song/song.action.types.js","component/nav-bar/nav-bar.component.jsx","redux/song/song.action.js","App.js","redux/search/search.reducer.js","redux/song/song.reducer.js","redux/rootReducer.js","redux/search/search.saga.js","redux/song/song.saga.js","redux/rootSaga.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","songIDSelect","createSelector","state","song","embedIDs","SoundWave","prevSong","currentSong","setState","length","nextSong","id","this","props","parseInt","Math","random","className","onClick","BackwardOutlined","style","fontSize","scrolling","width","height","src","frameBorder","allowFullScreen","title","ForwardOutlined","backgroundColor","React","Component","mapStateToProps","createStructuredSelector","connect","gifSelect","search","gif","VideoContainer","setGifSize","getSize","window","innerHeight","console","log","url","onResize","onresize","innerWidth","alt","crossOrigin","PureComponent","SEARCH_ACTION_TYPES","searchSuccess","type","payload","SONG_ACTION_TYPES","GET_SONG_START","GET_SONG_SUCCESS","GET_SONG_FAILURE","GET_CURRENT_SONG","Navigation","result","event","searchStart","getSongStart","mood","target","innerHTML","encodeURI","toLowerCase","onChange","name","value","searchHandle","alert","iconClickHandle","hyphens","document","querySelectorAll","i","classList","toggle","querySelector","forEach","p","index","animation","dispatch","keywords","kind","App","backgroundImage","backgroundRepeat","backgroundSize","TransitionGroup","CSSTransition","key","classNames","timeout","enter","exit","INITIAL_STATE","error","searchReducer","action","songReducer","GET_SIZE","rootReducer","combineReducers","getGifData","onSearchStart","searchSagas","axios","get","data","randomGif","images","downsized_large","put","takeLatest","all","call","getSong","onGetSongStart","songSaga","collection","songRef","where","snapShot","docs","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.07d89515.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBelC1esFXUokFC1ZjAY-UaoQ4qkSk_LDE\",\r\n    authDomain: \"mood-windows.firebaseapp.com\",\r\n    databaseURL: \"https://mood-windows.firebaseio.com\",\r\n    projectId: \"mood-windows\",\r\n    storageBucket: \"mood-windows.appspot.com\",\r\n    messagingSenderId: \"660285859384\",\r\n    appId: \"1:660285859384:web:89788eb5cff6e2d50168cd\",\r\n    measurementId: \"G-VYY1L8ZZNE\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\n","import {createSelector} from 'reselect';\r\n\r\nconst songSelect = state => state.song;\r\n\r\nexport const songIDSelect = createSelector(\r\n    [songSelect],\r\n    song => song.embedIDs\r\n);\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { songIDSelect } from \"../../redux/song/song.selector\";\r\nimport { ForwardOutlined, BackwardOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./sound-wave.style.scss\";\r\n\r\nclass SoundWave extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      embedIDs: [\r\n        { id: \"ZW677U88\" },\r\n        { id: \"ZW6FEDOA\" },\r\n        { id: \"ZW78WAEC\" },\r\n        { id: \"ZW7AUOCI\" },\r\n        { id: \"ZW9ABCWU\" },\r\n      ],\r\n      currentSong: 0,\r\n    };\r\n  }\r\n\r\n  prevSong = () => {\r\n    if (this.state.currentSong === 0) {\r\n      return this.setState({ currentSong: this.state.embedIDs.length - 1 });\r\n    } else {\r\n      return this.setState({ currentSong: this.state.currentSong - 1 });\r\n    }\r\n  };\r\n\r\n  nextSong = () => {\r\n    if (this.state.currentSong === this.state.embedIDs.length - 1) {\r\n      return this.setState({ currentSong: 0 });\r\n    } else {\r\n      return this.setState({ currentSong: this.state.currentSong + 1 });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const { embedIDs } = this.props;\r\n    if (embedIDs[0].id === this.state.embedIDs[0].id) {\r\n      return null;\r\n    } else {\r\n      this.setState({ embedIDs });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { embedIDs } = this.props;\r\n\r\n    this.setState({\r\n      embedIDs,\r\n      currentSong: parseInt(Math.random() * embedIDs.length),\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { embedIDs } = this.props;\r\n\r\n\r\n    return (\r\n      <div id=\"sound\">\r\n        <button className=\"prev\" onClick={this.prevSong}>\r\n          <BackwardOutlined style={{ fontSize: \"2rem\" }} />\r\n        </button>\r\n        <iframe\r\n          scrolling=\"yes\"\r\n          width=\"40%\"\r\n          height=\"50\"\r\n          src={`https://zingmp3.vn/embed/song/${\r\n            embedIDs[this.state.currentSong].id\r\n          }?start=true`}\r\n          frameBorder=\"0\"\r\n          allowFullScreen={true}\r\n          title=\"song\"\r\n        />\r\n        <button className=\"next\" onClick={this.nextSong}>\r\n          <ForwardOutlined\r\n            style={{ fontSize: \"2rem\", backgroundColor: \"none\" }}\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  embedIDs: songIDSelect,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SoundWave);\r\n","import {createSelector} from 'reselect';\r\n\r\nconst searchSelect = state => state.search;\r\n\r\nexport const gifSelect = createSelector(\r\n    [searchSelect],\r\n    search => search.gif\r\n);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { gifSelect } from \"../../redux/search/search.selector\";\r\nimport \"./video-container.style.scss\";\r\n\r\n\r\nclass VideoContainer extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n  }\r\n\r\n  setGifSize = () => {\r\n    const { gif, getSize } = this.props;\r\n    let width = this.state.width < 600 ? this.state.width - 100 : gif.width;\r\n    let height = (width * gif.height) / gif.width;\r\n\r\n    if (height + 300 >= this.state.height) {\r\n      height = window.innerHeight - 300;\r\n      width = (height * gif.width) / gif.height;\r\n    }\r\n    console.log(gif.height,gif.width);\r\n    console.log(height,width);\r\n    return {\r\n      url: gif.url,\r\n      height,\r\n      width,\r\n    };\r\n  };\r\n\r\n  onResize = () => {\r\n    window.onresize = () => {\r\n      this.setState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    };\r\n  };\r\n\r\n  render() {\r\n    this.onResize();\r\n    const { url, width, height} = this.setGifSize();\r\n   \r\n\r\n    return (\r\n      <div className=\"video-container\">\r\n        <img\r\n          className=\"gif\"\r\n          src={url}\r\n          style={{ width, height }}\r\n          alt=\"gif\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  gif: gifSelect,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(VideoContainer);\r\n","export const SEARCH_ACTION_TYPES = {\r\n    GET_GIF_DATA_START:'GET_GIF_DATA_START',\r\n    GET_GIF_DATA_SUCCESS:'GET_GIF_DATA_SUCCESS',\r\n    GET_GIF_DATA_FAILURE:'GET_GIF_DATA_FAILURE',\r\n    GET_DEFAULT:'GET_DEFAULT',\r\n}","import { SEARCH_ACTION_TYPES } from './search.action.types';\r\n\r\nexport const searchStart = keywords => ({\r\n    type: SEARCH_ACTION_TYPES.GET_GIF_DATA_START,\r\n    payload: keywords\r\n});\r\n\r\nexport const searchSuccess = (gif) => ({\r\n    type: SEARCH_ACTION_TYPES.GET_GIF_DATA_SUCCESS,\r\n    payload: gif\r\n});\r\n\r\nexport const searchFailure = error => ({\r\n    type: SEARCH_ACTION_TYPES.GET_GIF_DATA_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const searchDefault = () => ({\r\n    type: SEARCH_ACTION_TYPES.GET_DEFAULT,\r\n})","export const SONG_ACTION_TYPES = {\r\n    GET_SONG_START: 'GET_SONG_START',\r\n    GET_SONG_SUCCESS: 'GET_SONG_SUCCESS',\r\n    GET_SONG_FAILURE: 'GET_SONG_FAILURE',\r\n    GET_CURRENT_SONG:'GET_CURRENT_SONG',\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchStart } from \"../../redux/search/search.actions\";\r\nimport { getSongStart } from \"../../redux/song/song.action\";\r\n\r\nimport \"./nav-bar.style.scss\";\r\n\r\nclass Navigation extends React.Component {\r\n  state = {\r\n    search: \"\",\r\n    result: \"\",\r\n  };\r\n\r\n  //onClick\r\n  onClick = (event) => {\r\n    const { searchStart, getSongStart } = this.props;\r\n    const mood = event.target.innerHTML;\r\n    const search = encodeURI(\"pixel \" + mood.toLowerCase() + \" art\");\r\n    searchStart(search);\r\n    getSongStart(mood.toLowerCase());\r\n  };\r\n\r\n  //onChange\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    \r\n  };\r\n\r\n  //search\r\n  searchHandle = () => {\r\n    const { searchStart } = this.props;\r\n    if (this.state.search === \"\") {\r\n      return alert(\"What's your mood? Let me know.\");\r\n    }\r\n    const searchGif = encodeURI(\"pixel \" + this.state.search + \" art\");\r\n    searchStart(searchGif);\r\n  };\r\n\r\n  //active side bar\r\n  iconClickHandle = () => {\r\n    const hyphens = document.querySelectorAll(\".hyphen\");\r\n    for (let i = 0; i < hyphens.length; i++) {\r\n      hyphens[i].classList.toggle(`hyphen-${i + 1}`);\r\n    }\r\n\r\n    const navMoods = document.querySelector(\".nav-moods\");\r\n    navMoods.classList.toggle(\"nav-moods-visible\");\r\n\r\n    const moods = document.querySelectorAll(\".nav-moods p\");\r\n    moods.forEach((p, index) => {\r\n      if (p.style.animation) {\r\n        p.style.animation = \"\";\r\n      } else {\r\n        p.style.animation = `navLinkFade 0.5s ease forwards ${\r\n          index / 6 + 0.3\r\n        }s`;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav\">\r\n        <div className=\"nav-container\">\r\n          <p className=\"nav-name\">YOUR MOOD</p>\r\n          <div className=\"nav-icon\" onClick={this.iconClickHandle}>\r\n            <div className=\"hyphen\"></div>\r\n            <div className=\"hyphen\"></div>\r\n            <div className=\"hyphen\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-moods\">\r\n          <p name=\"relax\" onClick={this.onClick}>\r\n            Relax\r\n          </p>\r\n          <p name=\"happy\" onClick={this.onClick}>\r\n            Happy\r\n          </p>\r\n          <p name=\"sad\" onClick={this.onClick}>\r\n            Sad\r\n          </p>\r\n          <p name=\"chill out\" onClick={this.onClick}>\r\n            Chill\r\n          </p>\r\n          <p name=\"peacefull\" onClick={this.onClick}>\r\n            Peacefull\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  searchStart: (keywords) => dispatch(searchStart(keywords)),\r\n  getSongStart: (kind) => dispatch(getSongStart(kind)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Navigation);\r\n","import { SONG_ACTION_TYPES } from './song.action.types';\r\n\r\nexport const getSongStart = kind => ({\r\n    type: SONG_ACTION_TYPES.GET_SONG_START,\r\n    payload: kind,\r\n});\r\n\r\nexport const getSongSuccess = embedIDs => ({\r\n    type: SONG_ACTION_TYPES.GET_SONG_SUCCESS,\r\n    payload: embedIDs,\r\n});\r\n\r\nexport const getSongFailure = error => ({\r\n    type: SONG_ACTION_TYPES.GET_SONG_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const getSize = width => ({\r\n    type: SONG_ACTION_TYPES.GET_SIZE,\r\n    payload: width\r\n})","import React from 'react';\r\nimport './App.scss';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { firestore } from './firebase/firebase.utils';\r\n\r\nimport SoundWave from './component/sound-wave/sound-wave.component';\r\nimport VideoContainer from './component/video-container/video-container.component';\r\nimport Navigation from './component/nav-bar/nav-bar.component';\r\nimport { gifSelect } from './redux/search/search.selector';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.PureComponent {\r\n\r\n  componentDidMount() {\r\n    // const {searchDefault} = this.props;\r\n    // searchDefault();\r\n    \r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const { gif } = this.props;\r\n\r\n\r\n    const style = {\r\n      backgroundImage: `url(${gif.url})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className='bg-image' style={style}></div>\r\n        <Navigation />\r\n        <TransitionGroup className='gif'  >\r\n          <CSSTransition key={Math.random() * 1000} classNames='example' timeout={{ enter: 1000, exit: 1000 }} >\r\n            <VideoContainer />\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <SoundWave />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  gif: gifSelect\r\n})\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { SEARCH_ACTION_TYPES } from './search.action.types';\r\n\r\nconst INITIAL_STATE = {\r\n    gif:{\r\n        url: \"https://media3.giphy.com/media/xUPGGDNsLvqsBOhuU0/giphy.gif?cid=5dedc193b0590200add75644fe04a41f97d5af20b8075334&rid=giphy.gif\",\r\n        width: 480,\r\n        height: 360,\r\n    },\r\n    error: '',\r\n}\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_ACTION_TYPES.GET_GIF_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                gif: action.payload\r\n            }\r\n        case SEARCH_ACTION_TYPES.GET_GIF_DATA_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default searchReducer;","import { SONG_ACTION_TYPES } from './song.action.types';\r\n\r\nconst INITIAL_STATE = {\r\n    width: 500,\r\n    embedIDs: [\r\n        { id: \"ZW677U88\" },\r\n        { id: \"ZW6FEDOA\" },\r\n        { id: \"ZW78WAEC\" },\r\n        { id: \"ZW7AUOCI\" },\r\n        { id: \"ZW9ABCWU\" },\r\n    ],\r\n    error: null\r\n};\r\n\r\nconst songReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SONG_ACTION_TYPES.GET_SIZE:\r\n            return {\r\n                ...state,\r\n                width: action.payload\r\n            }\r\n        case SONG_ACTION_TYPES.GET_SONG_SUCCESS:\r\n            return {\r\n                ...state,\r\n                embedIDs: action.payload,\r\n            }\r\n\r\n        case SONG_ACTION_TYPES.GET_SONG_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default songReducer;","import { combineReducers } from 'redux';\r\n\r\nimport searchReducer from './search/search.reducer';\r\nimport songReducer from './song/song.reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    search: searchReducer,\r\n    song: songReducer\r\n});\r\n\r\nexport default rootReducer;","import { takeLatest, all, call, put } from 'redux-saga/effects';\r\nimport { SEARCH_ACTION_TYPES } from '../search/search.action.types';\r\nimport axios from 'axios';\r\nimport { searchFailure, searchSuccess } from './search.actions';\r\n\r\nexport function* getGifData({ payload }) {\r\n    try {\r\n        const result = yield axios.get(\r\n            `https://api.giphy.com/v1/gifs/search?q=${payload}&api_key=HZa43wqKKV10JRWCquas0lXxW5CzfRK1&limit=20`\r\n        );\r\n\r\n        const data = yield result.data.data;\r\n        const randomGif = yield parseInt(Math.random() * 20);\r\n        const gif = yield {\r\n            url: data[randomGif].images.downsized_large.url,\r\n            width: data[randomGif].images.downsized_large.width,\r\n            height: data[randomGif].images.downsized_large.height\r\n        };\r\n        yield put(searchSuccess(gif));\r\n    } catch (error) {\r\n        yield put(searchFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onSearchStart() {\r\n    yield takeLatest(SEARCH_ACTION_TYPES.GET_GIF_DATA_START, getGifData);\r\n}\r\n\r\nexport function* searchSagas() {\r\n    yield all([call(onSearchStart)]);\r\n}","import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport { firestore } from '../../firebase/firebase.utils';\r\n\r\nimport { SONG_ACTION_TYPES } from './song.action.types';\r\nimport { getSongSuccess, getSongFailure } from './song.action';\r\n\r\nexport function* getSong({ payload }) {\r\n    try {\r\n        const songRef = yield firestore.collection('song');\r\n        const snapShot = yield songRef.where(payload, '==', true).get();\r\n        yield put(getSongSuccess(snapShot.docs));\r\n    } catch (error) {\r\n        yield put(getSongFailure(error));\r\n\r\n    }\r\n}\r\n\r\nexport function* onGetSongStart() {\r\n    yield takeLatest(SONG_ACTION_TYPES.GET_SONG_START, getSong);\r\n}\r\n\r\nexport function* songSaga() {\r\n    yield all([call(onGetSongStart)]);\r\n}","import {all,call} from 'redux-saga/effects';\r\n\r\nimport {searchSagas} from './search/search.saga';\r\nimport {songSaga} from './song/song.saga';\r\n\r\n\r\nfunction* rootSaga(){\r\n    yield all([call(searchSagas),call(songSaga)]);\r\n};\r\n\r\nexport default rootSaga;","import {createStore,applyMiddleware} from 'redux';\r\n// import logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"antd/dist/antd.css\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}